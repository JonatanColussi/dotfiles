#!/usr/bin/env zsh

logging() {
    # write your test however you want; this just tests if SILENT is non-empty
    if [ -n "$SILENT" ]; then
        "$@" &> /dev/null
    else
        "$@"
    fi
}

# Header logging
e_header() {
    logging printf "\n$(tput setaf 7)%s:$(tput sgr0) \n" "$@"
}

# Success logging
e_success() {
    logging printf "$(tput setaf 2)✓ Success:$(tput sgr0) %s\n" "$@"
}

# Error logging
e_error() {
    logging printf "$(tput setaf 1)⊘ Error:$(tput sgr0) %s. Aborting!\n" "$@"
}

# Warning logging
e_warning() {
    logging printf "$(tput setaf 3)⚠ Warning:$(tput sgr0) %s!\n" "$@"
}

# Question logging
e_question() {
    logging printf "\n$(tput setaf 3)==> %s?$(tput sgr0) " "$@"
}

# Command/Processing logging
e_process() {
    logging printf "$(tput setaf 6)┃$(tput sgr0)$(tput setaf 7) %s...$(tput sgr0)\n" "$@"
}

# Ask for confirmation before proceeding
seek_confirmation() {
    printf "\n"
    e_question "$@"
    read REPLY\?"Continue? (Y/n) "

    if [[ -z "$REPLY" ]]; then
    	REPLY="Y";
    fi

    printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
is_confirmed() {
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
      return 0
    fi
    return 1
}

# Test whether we're in a git repo
is_git_repo() {
    $(git rev-parse --is-inside-work-tree &> /dev/null)
}

# Test whether a command exists
# $1 - cmd to test
type_exists() {
    if type "$1" > /dev/null; then
      return 0
    fi

    return 1
}

array_contains () {
    local seeking=$1; shift
    local in=1
    for element; do
        if [[ $element == $seeking ]]; then
            in=0
            break
        fi
    done
    return $in
}
